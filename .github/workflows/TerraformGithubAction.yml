# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
   runs-on: ubuntu-latest
   env: 
       ARM_TENANT_ID: '4b272702-269b-4016-94d0-a8ef19cf5e22'
       ARM_SUBSCRIPTION_ID: '72596214-53a1-4131-8376-84ea4492fd6d'
       ARM_CLIENT_ID: '83bece55-fca0-4f12-b52e-aa72a2a00fac'
       ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
       AZURE_STORAGE: 'terraformdemo5234232' 
    # Steps represent a sequence of tasks that will be executed as part of the job
   steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
         creds: ${{secrets.AZURE_CREDENTIALS}}
         
         
      
      - name: Build Terraform State
        run: chmod +x ./tfstate.sh && ./tfstate.sh ${{env.AZURE_STORAGE}}
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
      - name: Terraform Init
        run : terraform init -backend-config="storage_account_name=${{env.AZURE_STORAGE}}"
      - name: Terraform Plan
        run: terraform plan -out=tfplan
      - name: Terraform Apply
        run : terraform apply tfplan
    
